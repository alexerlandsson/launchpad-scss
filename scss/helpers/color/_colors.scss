/// All colors used across the projects should be declared in this file.
/// Use colors declared in $color-defs in _definitions.scss and give them
/// an abstract name in $colors. The colors are then fetched using the color() function.

@use "sass:map";
@use "_definitions" as *;

// This map is used to declare variables to use for colors
$colors: (
  primary: (
    main: color-defs(blue-dark),
    text: color-defs(white),
  ),
  secondary: (
    main: color-defs(teal),
    text: color-defs(black),
  ),
  bg: (
    main: color-defs(white),
    alt: color-defs(gray-light),
  ),
  text: (
    main: color-defs(black),
    alt: color-defs(gray-dark),
  ),
  link: (
    main: color-defs(blue),
  ),
  border: (
    main: color-defs(gray),
  ),
  focus: (
    main: color-defs(blue),
  ),
  disabled: (
    bg: color-defs(gray-light),
    text: color-defs(gray-dark),
  ),
  overlay: (
    main: color-defs(black),
    alt: color-defs(white),
  ),
  semantic: (
    success: (
      main: color-defs(semantic, green),
      alt: color-defs(semantic, green-light),
      text: color-defs(semantic, green-dark),
    ),
    error: (
      main: color-defs(semantic, red),
      alt: color-defs(semantic, red-light),
      text: color-defs(semantic, red-dark),
    ),
    warning: (
      main: color-defs(semantic, yellow),
      alt: color-defs(semantic, yellow-light),
      text: color-defs(semantic, yellow-dark),
    ),
    info: (
      main: color-defs(semantic, blue),
      alt: color-defs(semantic, blue-light),
      text: color-defs(semantic, blue-dark),
    ),
  ),
);

// This function is used to use colors in the project
@function color($keys...) {
  $value: map.get($colors, $keys...);

  @if not $value {
    @error "Color '#{$keys}' does not exist in $colors.";
  }

  @return $value;
}
